@model IEnumerable<Blog>
@using Microsoft.Extensions.Localization
@using Bloogs.Entities
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Bloogs.Data
@using Microsoft.EntityFrameworkCore
@inject IStringLocalizer<Bloogs> Localizer
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject AppDbContext context

@{
    ViewData["Title"] = "Index";
}

<h1></h1>

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Localizer["Nom"]
            </th>
            <th>
                @Localizer["Owner"]
            </th>
            <th>
                @Localizer["Pubs"]
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Owner.FirstName) @Html.DisplayFor(modelItem => item.Owner.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Posts.Count)
            </td>

            <td>
                @if (SignInManager.IsSignedIn(User))
                {
                    var user = await UserManager.GetUserAsync(User);
                    if (User.IsInRole("Supervisor") || item.Owner == user)
                    {
                        if (item.Owner == user)
                        {
                            <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>
                        }
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash3-fill"></i></a>
                    }

                }
                <a class="btn btn-primary" asp-action="UserBlog" asp-route-id="@item.Id"><i class="bi bi-three-dots-vertical"></i></a>

            </td>
        </tr>
    }
    </tbody>
</table>
